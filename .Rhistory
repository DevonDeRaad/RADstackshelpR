out <- list()
out$snp<-snp.df
out$loci<-loci.df
out$snp.R80<-snp.80.df
out$loci.R80<-loci.80.df
return(out)
#close function
}
output<-optimize_M(M1="M1.vcf",
M2="M2.vcf",
M3="M3.vcf",
M4="M4.vcf",
M5="M5.vcf",
M6="M6.vcf",
M7="M7.vcf",
M8="M8.vcf")
vis_loci(output)
View(output)
vis_loci <- function(output=NULL, stacks_param=NULL){
#isolate SNP df
loci.df<-output$loci
loci.df$var<-as.factor(loci.df$var)
loci.df$poly.loci<-as.numeric(as.character(loci.df$poly.loci))
#isolate SNP R80 df
loci.R80.df<-output$loci.R80
loci.R80.df$var<-as.factor(loci.R80.df$var)
loci.R80.df$poly.loci.80<-as.numeric(as.character(loci.R80.df$poly.loci.80))
#isolate optimized value
opt<-loci.R80.df[loci.R80.df$poly.loci.80 == max(loci.R80.df$poly.loci.80), ]
cat("Visualize how different values of", stacks_param, "affect number of polymorphic loci retained.
Density plot shows the distribution of the number of loci retained in each sample,
while the asterisk denotes number of loci retained at an 80% completeness cutoff. The optimal value is denoted by red color.", "\n")
return(
ggplot2::ggplot(loci.df, ggplot2::aes(x = poly.loci, y = var)) +
ggridges::geom_density_ridges(jittered_points = FALSE, alpha = .5) +
ggplot2::geom_point(loci.R80.df, mapping=ggplot2::aes(x=poly.loci.80, y=var), pch=8, cex=3)+
ggplot2::geom_point(opt, mapping=ggplot2::aes(x=poly.loci.80, y=var, col="red"), pch=8, cex=3)+
ggplot2::theme_classic() +
ggplot2::labs(x = "polymorphic loci retained", y = paste(stacks_param, "value")) +
ggplot2::theme(legend.position = "none")
)
#close function
}
vis_loci(output)
#' There are slots for varying the n parameter across M-1, M, and M-1 (as recommended by Paris et al. 2017).
#' After running stacks with each of the n options, plug the output vcf files into this
#' function to visualize the effect of varying m on number of SNPs and loci built to
#' recognize which value optimizes the n parameter for your dataset at the 'R80' cutoff (Paris et al. 2017).
#'
#' @param nequalsMminus1 Path to the input vcf file for a run when n=M-1
#' @param nequalsM Path to the input vcf file for a run when n=M
#' @param nequalsMplus1 Path to the input vcf file for a run when n=M+1
#' @return A dataframe showing the number of SNPs and loci retained across filtering levels for each n value
#' @export
optimize_n <- function(nequalsMminus1=NULL,nequalsM=NULL,nequalsMplus1=NULL){
#initialize empty snp.df
snp.df<- data.frame(var=character(), snps=numeric())
#initialize empty loci.df
loci.df<- data.frame(var=character(), loci=numeric())
#initialize empty snp.80.df
snp.80.df<- data.frame(var=character(), snps.80=numeric())
#initialize empty loci.80.df
loci.80.df<- data.frame(var=character(), loci.80=numeric())
#set vector of m identifiers
ms<-c("n=M-1","n=M","n=M+1")
#start on first position in vector of m identifiers
j=1
#open for loop for each m identifier
for(x in list(nequalsMminus1,nequalsM,nequalsMplus1)){
#open if else statement, if no m of given value, move j up to next m identifier, else calculate snps/loci retained
if(is.null(x)){j=j+1} else{
##read in vcfR
invisible(utils::capture.output(vcf.r<- vcfR::read.vcfR(x))) #read in all data
#initialize vectors to hold filt level, snps retained, poly loci retained
snps<- vector("numeric", length = ncol(vcf.r@gt)-1)
poly.loci<- vector("numeric", length = ncol(vcf.r@gt)-1)
###rep m identifier, times = number of samples in the vcf
m<- rep(ms[j], times = ncol(vcf.r@gt)-1)
##run loop to fill up vectors with a value for each filter level
k=1
for (i in 2:ncol(vcf.r@gt)){
#calculate the number of non-missing SNPs present in the given sample
snps[k]<-sum(is.na(vcf.r@gt[,i]) == FALSE)
#calculate number of polymorphic loci present in the given sample
poly.loci[k]<-length(unique(vcf.r@fix[,1][is.na(vcf.r@gt[,i]) == FALSE]))
k=k+1
#close for loop
}
#append each to existing df
snp.df<- rbind(snp.df, as.data.frame(cbind(m, snps)))
loci.df<- rbind(loci.df, as.data.frame(cbind(m, poly.loci)))
#calculate the number of loci and SNPs retained in the 80% complete dataset for the given m value
snps.80<-nrow(vcf.r@gt[(rowSums(is.na(vcf.r@gt))/ncol(vcf.r@gt) <= .2),])
#calculate number of polymorphic loci retained at this cutoff
poly.loci.80<-length(unique(vcf.r@fix[,1][(rowSums(is.na(vcf.r@gt))/ncol(vcf.r@gt) <= .2)]))
#append each to existing df
snp.80.df<- rbind(snp.80.df, as.data.frame(cbind(ms[j], snps.80)))
loci.80.df<- rbind(loci.80.df, as.data.frame(cbind(ms[j], poly.loci.80)))
#set j for the next m identifier for next time we go through this loop
j=j+1
#close if else statement
}
#close for loop
}
#fix colnames
colnames(snp.80.df)<-c("var","snps.80")
colnames(loci.80.df)<-c("var","poly.loci.80")
colnames(snp.df)<-c("var","snps")
colnames(loci.df)<-c("var","poly.loci")
#return the depth and snp/loci dataframes in case you want to do your own visualizations
out <- list()
out$snp<-snp.df
out$loci<-loci.df
out$snp.R80<-snp.80.df
out$loci.R80<-loci.80.df
return(out)
#close function
}
output<-optimize_n(nequalsMminus1 = "M5.vcf",nequalsM = "M6.vcf",nequalsMplus1 = "M7.vcf")
vis_snps(output)
vis_snps(output, stacks_param = "n")
vis_loci(output, stacks_param = "n")
setwd("~/")
setwd("~/Desktop/RADstackshelpR/")
library(devtools)
build()
library(RADstackshelpR)
rm(list=ls())
library(RADstackshelpR)
library(RADstackshelpR)
build()
devtools::document()
devtools::document()
library(RADstackshelpR)
devtools::load_all(".")
devtools::document()
devtools::check(".")
devtools::load_all(".")
devtools::document()
library(RADstackshelpR)
#optimize_m function will generate summary stats on your 5 iterative runs
output<-optimize_m(m3="m_3.vcf",
m4="m_4.vcf",
m5="m_5.vcf",
m6="m_6.vcf",
m7="m_7.vcf")
#set working directory to folder containing vcf files for all iterated vcf files
setwd("/Users/devder/Desktop/hipposideros/")
setwd("/Users/devder/Desktop/hipposideros/")
#optimize_m function will generate summary stats on your 5 iterative runs
output<-optimize_m(m3="m_3.vcf",
m4="m_4.vcf",
m5="m_5.vcf",
m6="m_6.vcf",
m7="m_7.vcf")
optimize_m(m3="m_3.vcf")
output<-optimize_m(m3="m_3.vcf",
m4="m_4.vcf",
m5="m_5.vcf",
m6="m_6.vcf",
m7="m_7.vcf")
output<-optimize_m(m3="m_3.vcf")
output<-optimize_m(m3="m_3.vcf")
output<-optimize_m(m3="/Users/devder/Desktop/hipposideros/m_3.vcf",
m4="/Users/devder/Desktop/hipposideros/m_4.vcf",
m5="/Users/devder/Desktop/hipposideros/m_5.vcf",
m6="/Users/devder/Desktop/hipposideros/m_6.vcf",
m7="/Users/devder/Desktop/hipposideros/m_7.vcf")
#visualize the effect of varying m on the depth of each sample
vis_depth(output)
vis_depth(output)
View(output)
#load package
library(RADstackshelpR)
#visualize the effect of varying m on the depth of each sample
vis_depth(output)
library(RADstackshelpR)
#load package
library(RADstackshelpR)
#visualize the effect of varying m on the depth of each sample
vis_depth(output)
vis_depth(output)
vis_depth(output=output)
output$depth
depth.df<-output$depth
depth.df$m<-as.factor(depth.df$m)
depth.df$dep<-as.numeric(as.character(depth.df$dep))
print("Visualize how different values of m affect average depth in each sample")
ggplot2::ggplot(depth.df, ggplot2::aes(x = dep, y = m)) +
ggridges::geom_density_ridges(jittered_points = TRUE, position = "raincloud", alpha = .35, cex=.5) +
ggplot2::theme_classic() +
ggplot2::labs(x = "average depth in each sample", y = "m value (minimum stack depth)") +
ggplot2::theme(legend.position = "none")
out<-optimize_m(m3="/Users/devder/Desktop/hipposideros/m_3.vcf",
m4="/Users/devder/Desktop/hipposideros/m_4.vcf",
m5="/Users/devder/Desktop/hipposideros/m_5.vcf",
m6="/Users/devder/Desktop/hipposideros/m_6.vcf",
m7="/Users/devder/Desktop/hipposideros/m_7.vcf")
vis_depth(output=out)
View(depth.df)
vis_depth <- function(output=NULL){
#take depth df output from all of these possibilities
#plot hist of depth at each m value on same plot
depth.df<-output$depth
depth.df$m<-as.factor(depth.df$m)
depth.df$dep<-as.numeric(as.character(depth.df$dep))
print("Visualize how different values of m affect average depth in each sample")
return(
ggplot2::ggplot(depth.df, ggplot2::aes(x = dep, y = m)) +
ggridges::geom_density_ridges(jittered_points = TRUE, position = "raincloud", alpha = .35, cex=.5) +
ggplot2::theme_classic() +
ggplot2::labs(x = "average depth in each sample", y = "m value (minimum stack depth)") +
ggplot2::theme(legend.position = "none")
)
#close function
}
vis_depth <- function(output=NULL){
#take depth df output from all of these possibilities
#plot hist of depth at each m value on same plot
depth.df<-output$depth
depth.df$m<-as.factor(depth.df$m)
depth.df$dep<-as.numeric(as.character(depth.df$dep))
print("Visualize how different values of m affect average depth in each sample")
return(
ggplot2::ggplot(depth.df, ggplot2::aes(x = dep, y = m)) +
ggridges::geom_density_ridges(jittered_points = TRUE, position = "raincloud", alpha = .35, cex=.5) +
ggplot2::theme_classic() +
ggplot2::labs(x = "average depth in each sample", y = "m value (minimum stack depth)") +
ggplot2::theme(legend.position = "none")
)
#close function
}
vis_depth(output=out)
#load package
library(RADstackshelpR)
uninstall("RADstackshelpR")
#load package
library(RADstackshelpR)
#visualize the effect of varying m on the depth of each sample
vis_depth(output=out)
rm(vis_depth())
rm(vis_depth
)
#visualize the effect of varying m on the depth of each sample
vis_depth(output=out)
devtools::install_github("DevonDeRaad/RADstackshelpR")
library(RADstackshelpR)
rm(list=ls())
out<-optimize_m(m3="/Users/devder/Desktop/hipposideros/m_3.vcf",
m4="/Users/devder/Desktop/hipposideros/m_4.vcf",
m5="/Users/devder/Desktop/hipposideros/m_5.vcf",
m6="/Users/devder/Desktop/hipposideros/m_6.vcf",
m7="/Users/devder/Desktop/hipposideros/m_7.vcf")
#visualize the effect of varying m on the depth of each sample
vis_depth(output=out)
#
vis_snps(output = out)
out$snp
#
vis_snps(output = out, stacks_param = "m")
#
vis_snps(output = out, stacks_param = "m")
#visualize the effect of varying m on the depth of each sample
vis_depth(output=out)
#take depth df output from all of these possibilities
#plot hist of depth at each m value on same plot
depth.df<-output$depth
depth.df$m<-as.factor(depth.df$m)
depth.df$dep<-as.numeric(as.character(depth.df$dep))
#take depth df output from all of these possibilities
#plot hist of depth at each m value on same plot
depth.df<-out$depth
depth.df$m<-as.factor(depth.df$m)
depth.df$dep<-as.numeric(as.character(depth.df$dep))
print("Visualize how different values of m affect average depth in each sample")
return(
ggplot2::ggplot(depth.df, ggplot2::aes(x = dep, y = m)) +
ggridges::geom_density_ridges(jittered_points = TRUE, position = "raincloud", alpha = .35, cex=.5) +
ggplot2::theme_classic() +
ggplot2::labs(x = "average depth in each sample", y = "m value (minimum stack depth)") +
ggplot2::theme(legend.position = "none")
)
ggplot2::ggplot(depth.df, ggplot2::aes(x = dep, y = m)) +
ggridges::geom_density_ridges(jittered_points = TRUE, position = "raincloud", alpha = .35, cex=.5) +
ggplot2::theme_classic() +
ggplot2::labs(x = "average depth in each sample", y = "m value (minimum stack depth)") +
ggplot2::theme(legend.position = "none")
#
vis_snps(output = out, stacks_param = "m")
#
vis_loci(output = out, stacks_param = "m")
rm(list=ls())
library(RADstackshelpR)
#visualize the effect of varying m on the depth of each sample
?vis_depth
devtools::install_github("DevonDeRaad/RADstackshelpR")
library(RADstackshelpR)
#visualize the effect of varying m on the depth of each sample
RADstackshelpR::vis_depth(output = out)
out<-optimize_m(m3="/Users/devder/Desktop/hipposideros/m_3.vcf",
m4="/Users/devder/Desktop/hipposideros/m_4.vcf",
m5="/Users/devder/Desktop/hipposideros/m_5.vcf",
m6="/Users/devder/Desktop/hipposideros/m_6.vcf",
m7="/Users/devder/Desktop/hipposideros/m_7.vcf")
RADstackshelpR::vis_depth(output = out)
#take depth df output from all of these possibilities
#plot hist of depth at each m value on same plot
depth.df<-out$depth
depth.df$m<-as.factor(depth.df$m)
depth.df$dep<-as.numeric(as.character(depth.df$dep))
ggplot2::ggplot(depth.df, ggplot2::aes(x = dep, y = m)) +
ggridges::geom_density_ridges(jittered_points = TRUE, position = "raincloud", alpha = .35, cex=.5) +
ggplot2::theme_classic() +
ggplot2::labs(x = "average depth in each sample", y = "m value (minimum stack depth)") +
ggplot2::theme(legend.position = "none")
#
vis_snps(output = out, stacks_param = "m")
#visualize the effect of varying m on the depth of each sample
RADstackshelpR::vis_depth(output = out)
ggplot2::ggplot(depth.df, ggplot2::aes(x = dep, y = m)) +
ggridges::geom_density_ridges(jittered_points = TRUE, position = "raincloud", alpha = .35, cex=.5) +
ggplot2::theme_classic() +
ggplot2::labs(x = "average depth in each sample", y = "m value (minimum stack depth)") +
ggplot2::theme(legend.position = "none")
vis_snps(output = out, stacks_param = "M")
vis_snps(output = out, stacks_param = "m")
#
vis_snps(output = out, stacks_param = "m")
out<-optimize_m(m3="/Users/devder/Desktop/hipposideros/m_3.vcf",
m4="/Users/devder/Desktop/hipposideros/m_4.vcf",
m5="/Users/devder/Desktop/hipposideros/m_5.vcf",
m6="/Users/devder/Desktop/hipposideros/m_6.vcf",
m7="/Users/devder/Desktop/hipposideros/m_7.vcf")
#
vis_snps(output = out, stacks_param = "m")
#
vis_loci(output = out, stacks_param = "m")
#visualize the effect of varying m on the depth of each sample
vis_depth(output = out)
plot(depth.df)
plot(depth.df)
plot(out$snp)
#visualize the effect of varying m on the number of SNPs retained
vis_snps(output = out, stacks_param = "m")
library(RADstackshelpR)
#visualize the effect of varying m on the depth of each sample
vis_depth(output = out)
library(RADstackshelpR)
#visualize the effect of varying m on the depth of each sample
vis_depth(output = out)
library(RADstackshelpR)
#visualize the effect of varying m on the depth of each sample
vis_depth(output = out)
out$snp.R80
#Finally, make a single figure showing the entire optimization process
gl<-list()
gl[1]<-vis_depth(output = m.out)
gl[1]<-vis_depth(output = out)
View(gl)
f<-vis_depth(output = out)
View(f)
gl[[1]]<-vis_depth(output = out)
#Finally, make a single figure showing the entire optimization process
gl<-list()
gl[[1]]<-vis_depth(output = out)
gl[[2]]<-vis_snps(output = out, stacks_param = "m")
grid.arrange(
grobs = gl,
widths = c(1,1),
layout_matrix = rbind(c(1,2))
)
gridExtra::grid.arrange(
grobs = gl,
widths = c(1,1),
layout_matrix = rbind(c(1,2))
)
gl<-list()
gl[[1]]<-vis_depth(output = m.out)
update.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(rlang)
help(rlang)
??rlang
remove(rlang)
remove.packages("rlang")
install.packages("rlang")
install.packages("rlang")
M.out<-optimize_bigM(M1="/Users/devder/Desktop/hipposideros/M1.vcf",
M2="/Users/devder/Desktop/hipposideros/M2.vcf",
M3="/Users/devder/Desktop/hipposideros/M3.vcf",
M4="/Users/devder/Desktop/hipposideros/M4.vcf",
M5="/Users/devder/Desktop/hipposideros/M5.vcf",
M6="/Users/devder/Desktop/hipposideros/M6.vcf",
M7="/Users/devder/Desktop/hipposideros/M7.vcf",
M8="/Users/devder/Desktop/hipposideros/M8.vcf")
#visualize the effect of varying m on the number of loci retained
vis_loci(output = m.out, stacks_param = "m")
library(RADstackshelpR)
m.out<-optimize_m(m3="/Users/devder/Desktop/hipposideros/m_3.vcf",
m4="/Users/devder/Desktop/hipposideros/m_4.vcf",
m5="/Users/devder/Desktop/hipposideros/m_5.vcf",
m6="/Users/devder/Desktop/hipposideros/m_6.vcf",
m7="/Users/devder/Desktop/hipposideros/m_7.vcf")
M.out<-optimize_bigM(M1="/Users/devder/Desktop/hipposideros/M1.vcf",
M2="/Users/devder/Desktop/hipposideros/M2.vcf",
M3="/Users/devder/Desktop/hipposideros/M3.vcf",
M4="/Users/devder/Desktop/hipposideros/M4.vcf",
M5="/Users/devder/Desktop/hipposideros/M5.vcf",
M6="/Users/devder/Desktop/hipposideros/M6.vcf",
M7="/Users/devder/Desktop/hipposideros/M7.vcf",
M8="/Users/devder/Desktop/hipposideros/M8.vcf")
pkgdown::build_site()
setwd("~/Desktop/RADstackshelpR/")
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
plot1<-vis_loci(output = m.out, stacks_param = "m")
sticker(plot1, package="RADstackshelpR", p_size=5.5, s_x=1, s_y=.85, s_width=1.55, s_height=.88,
h_fill="cornsilk", h_color="dodgerblue", p_color="dodgerblue", filename="~/Downloads/ggplot2.png")
library(hexSticker)
h_fill="cornsilk", h_color="dodgerblue", p_color="dodgerblue", filename="~/Downloads/ggplot2.png")
sticker(plot1, package="RADstackshelpR", p_size=5.5, s_x=1, s_y=.85, s_width=1.55, s_height=.88,
h_fill="cornsilk", h_color="dodgerblue", p_color="dodgerblue", filename="~/Downloads/ggplot2.png")
output<-m.out
loci.df<-output$loci
loci.df$var<-as.factor(loci.df$var)
loci.df$poly.loci<-as.numeric(as.character(loci.df$poly.loci))
#isolate SNP R80 df
loci.R80.df<-output$loci.R80
loci.R80.df$var<-as.factor(loci.R80.df$var)
loci.R80.df$poly.loci.80<-as.numeric(as.character(loci.R80.df$poly.loci.80))
#isolate optimized value
opt<-loci.R80.df[loci.R80.df$poly.loci.80 == max(loci.R80.df$poly.loci.80), ]
ggplot2::ggplot(loci.df, ggplot2::aes(x = poly.loci, y = var)) +
ggridges::geom_density_ridges(jittered_points = FALSE, alpha = .5) +
ggplot2::geom_point(loci.R80.df, mapping=ggplot2::aes(x=poly.loci.80, y=var), pch=8, cex=3)+
ggplot2::geom_point(opt, mapping=ggplot2::aes(x=poly.loci.80, y=var, col="red"), pch=8, cex=3)+
ggplot2::theme_classic() +
ggplot2::labs(x = "polymorphic loci retained", y = paste(stacks_param, "value")) +
ggplot2::theme(legend.position = "none")
ggplot2::ggplot(loci.df, ggplot2::aes(x = poly.loci, y = var)) +
ggridges::geom_density_ridges(jittered_points = FALSE, alpha = .5) +
ggplot2::geom_point(loci.R80.df, mapping=ggplot2::aes(x=poly.loci.80, y=var), pch=8, cex=3)+
ggplot2::geom_point(opt, mapping=ggplot2::aes(x=poly.loci.80, y=var, col="red"), pch=8, cex=3)+
ggplot2::theme_classic() +
ggplot2::labs(x = "polymorphic loci retained", y ="m value")) +
ggplot2::theme(legend.position = "none")
ggplot2::ggplot(loci.df, ggplot2::aes(x = poly.loci, y = var)) +
ggridges::geom_density_ridges(jittered_points = FALSE, alpha = .5) +
ggplot2::geom_point(loci.R80.df, mapping=ggplot2::aes(x=poly.loci.80, y=var), pch=8, cex=3)+
ggplot2::geom_point(opt, mapping=ggplot2::aes(x=poly.loci.80, y=var, col="red"), pch=8, cex=3)+
ggplot2::theme_classic() +
ggplot2::labs(x = "polymorphic loci retained", y ="m value")) +
ggplot2::theme(legend.position = "none")
ggplot2::ggplot(loci.df, ggplot2::aes(x = poly.loci, y = var)) +
ggridges::geom_density_ridges(jittered_points = FALSE, alpha = .5) +
ggplot2::geom_point(loci.R80.df, mapping=ggplot2::aes(x=poly.loci.80, y=var), pch=8, cex=3)+
ggplot2::geom_point(opt, mapping=ggplot2::aes(x=poly.loci.80, y=var, col="red"), pch=8, cex=3)+
ggplot2::theme_classic() +
ggplot2::labs(x = "polymorphic loci retained", y ="m value") +
ggplot2::theme(legend.position = "none")
dev.off()
dev.off()
ggplot2::ggplot(loci.df, ggplot2::aes(x = poly.loci, y = var)) +
ggridges::geom_density_ridges(jittered_points = FALSE, alpha = .5) +
ggplot2::geom_point(loci.R80.df, mapping=ggplot2::aes(x=poly.loci.80, y=var), pch=8, cex=3)+
ggplot2::geom_point(opt, mapping=ggplot2::aes(x=poly.loci.80, y=var, col="red"), pch=8, cex=3)+
ggplot2::theme_classic() +
ggplot2::labs(x = "polymorphic loci retained", y ="m value") +
ggplot2::theme(legend.position = "none")
plot1<-ggplot2::ggplot(loci.df, ggplot2::aes(x = poly.loci, y = var)) +
ggridges::geom_density_ridges(jittered_points = FALSE, alpha = .5) +
ggplot2::geom_point(loci.R80.df, mapping=ggplot2::aes(x=poly.loci.80, y=var), pch=8, cex=3)+
ggplot2::geom_point(opt, mapping=ggplot2::aes(x=poly.loci.80, y=var, col="red"), pch=8, cex=3)+
ggplot2::theme_classic() +
ggplot2::labs(x = "polymorphic loci retained", y ="m value") +
ggplot2::theme(legend.position = "none")
plot1
plot1
plot1
plot1<-ggplot2::ggplot(loci.df, ggplot2::aes(x = poly.loci, y = var)) +
ggridges::geom_density_ridges(jittered_points = FALSE, alpha = .5) +
ggplot2::geom_point(loci.R80.df, mapping=ggplot2::aes(x=poly.loci.80, y=var), pch=8, cex=1)+
ggplot2::geom_point(opt, mapping=ggplot2::aes(x=poly.loci.80, y=var, col="red"), pch=8, cex=1)+
ggplot2::theme_classic() +
ggplot2::theme(legend.position = "none", axis.title.x=element_blank(),axis.title.y=element_blank())
library(ggplot2)
plot1<-ggplot2::ggplot(loci.df, ggplot2::aes(x = poly.loci, y = var)) +
ggridges::geom_density_ridges(jittered_points = FALSE, alpha = .5) +
ggplot2::geom_point(loci.R80.df, mapping=ggplot2::aes(x=poly.loci.80, y=var), pch=8, cex=1)+
ggplot2::geom_point(opt, mapping=ggplot2::aes(x=poly.loci.80, y=var, col="red"), pch=8, cex=1)+
ggplot2::theme_classic() +
ggplot2::theme(legend.position = "none", axis.title.x=element_blank(),axis.title.y=element_blank())
sticker(plot1, package="RADstackshelpR", p_size=5.5, s_x=1, s_y=.85, s_width=1.55, s_height=.88,
h_fill="cornsilk", h_color="dodgerblue", p_color="dodgerblue", filename="~/Downloads/ggplot2.png")
plot1<-ggplot2::ggplot(loci.df, ggplot2::aes(x = poly.loci, y = var)) +
ggridges::geom_density_ridges(jittered_points = FALSE, alpha = .5) +
ggplot2::geom_point(loci.R80.df, mapping=ggplot2::aes(x=poly.loci.80, y=var), pch=8, cex=1)+
ggplot2::geom_point(opt, mapping=ggplot2::aes(x=poly.loci.80, y=var, col="red"), pch=8, cex=1)+
ggplot2::theme_classic() + theme_transparent()+
ggplot2::theme(legend.position = "none", axis.title.x=element_blank(),axis.title.y=element_blank(),
text = element_text(size=4), axis.text.x = element_text(angle=45, vjust = 1))
sticker(plot1, package="RADstackshelpR", p_size=5.5, s_x=1, s_y=.85, s_width=1.55, s_height=.88,
h_fill="cornsilk", h_color="dodgerblue", p_color="dodgerblue", filename="~/Downloads/ggplot2.png")
pkgdown::build_site()
